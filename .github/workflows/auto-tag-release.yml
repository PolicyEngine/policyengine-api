name: Auto Tag Release

on:
  push:
    branches:
      - master

jobs:
  check_and_tag:
    name: Check Version and Create Tag
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Log commit details
        run: |
          echo "Commit SHA: ${{ github.sha }}"
          echo "Commit message: ${{ github.event.head_commit.message }}"
          echo "Commit author: ${{ github.event.head_commit.author.name }}"
          echo "Commit method: ${{ github.event.head_commit.committer.name }}"
          echo "Checking for version changes..."

      - name: Check if constants.py was changed
        id: check_file
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q "policyengine_api/constants.py"; then
            echo "Constants file was changed in this commit"
            echo "file_changed=true" >> $GITHUB_OUTPUT
          else
            echo "Constants file was NOT changed in this commit"
            echo "file_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Get current version
        id: get_version
        if: steps.check_file.outputs.file_changed == 'true'
        run: |
          VERSION=$(grep -o 'VERSION = "[^"]*"' policyengine_api/constants.py | cut -d'"' -f2)
          echo "Current version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          git checkout ${{ github.event.before }} -- policyengine_api/constants.py
          PREV_VERSION=$(grep -o 'VERSION = "[^"]*"' policyengine_api/constants.py | cut -d'"' -f2)
          git checkout ${{ github.sha }} -- policyengine_api/constants.py

          echo "Previous version: $PREV_VERSION"
          echo "prev_version=$PREV_VERSION" >> $GITHUB_OUTPUT

          if [ "$VERSION" != "$PREV_VERSION" ]; then
            echo "Version changed from $PREV_VERSION to $VERSION"
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged: $VERSION"
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Check if tag exists
        id: check_tag
        if: steps.check_file.outputs.file_changed == 'true' && steps.get_version.outputs.version_changed == 'true'
        run: |
          if git tag -l | grep -q "^${{ steps.get_version.outputs.version }}$"; then
            echo "Tag ${{ steps.get_version.outputs.version }} already exists."
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Tag ${{ steps.get_version.outputs.version }} does not exist yet."
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create and push tag
        if: >-
          steps.check_file.outputs.file_changed == 'true' && 
          steps.get_version.outputs.version_changed == 'true' && 
          steps.check_tag.outputs.tag_exists == 'false'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          echo "Creating new tag: ${{ steps.get_version.outputs.version }}"

          git tag -a "${{ steps.get_version.outputs.version }}" -m "Release ${{ steps.get_version.outputs.version }}"

          git push origin "${{ steps.get_version.outputs.version }}"

          echo "Successfully created and pushed tag ${{ steps.get_version.outputs.version }}"

      - name: Tag creation skipped
        if: >-
          steps.check_file.outputs.file_changed == 'true' && 
          steps.get_version.outputs.version_changed == 'true' && 
          steps.check_tag.outputs.tag_exists == 'true'
        run: |
          echo "Tag creation skipped as tag ${{ steps.get_version.outputs.version }} already exists."

      - name: No version change detected
        if: >-
          steps.check_file.outputs.file_changed == 'true' && 
          steps.get_version.outputs.version_changed == 'false'
        run: |
          echo "The constants.py file was changed but the version number remained the same."
          echo "No tag was created."

      - name: Constants file not changed
        if: steps.check_file.outputs.file_changed == 'false'
        run: |
          echo "The constants.py file was not modified in this commit."
          echo "No tag was created."
